//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SsmsTableDependencyDiagram.Domain.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SqlStatements {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlStatements() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SsmsTableDependencyDiagram.Domain.Resources.SqlStatements", typeof(SqlStatements).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Active Result Sets.
        /// </summary>
        public static string Multiple_Active_Result_Sets {
            get {
                return ResourceManager.GetString("Multiple_Active_Result_Sets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultipleActiveResultSets.
        /// </summary>
        public static string MultipleActiveResultSets {
            get {
                return ResourceManager.GetString("MultipleActiveResultSets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select Name AS DataBaseName from sys.databases WHERE name NOT IN (&apos;master&apos;, &apos;tempdb&apos;, &apos;model&apos;, &apos;msdb&apos;);.
        /// </summary>
        public static string RetrieveDatabases {
            get {
                return ResourceManager.GetString("RetrieveDatabases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE {0}
        ///--USE [AdventureWorksLT2014]
        ///
        ///IF OBJECT_ID(N&apos;tempdb..#TmpFKRelationship&apos;) IS NOT NULL
        ///BEGIN
        ///DROP TABLE #TmpFKRelationship
        ///END
        ///
        ///SELECT * INTO #TmpFKRelationship FROM 
        ///(
        ///SELECT 
        ///	ROW_NUMBER() OVER (ORDER BY fk.name) AS RowCounter,
        ///    fk.name AS ForeignKeyName,
        ///    tp.name AS ParentTableName,
        ///    cp.name AS ParentColumnName,
        ///    rf.name AS ReferencedTableName,	
        ///    cr.name AS ReferencedColumnName,
        ///	ist.TABLE_SCHEMA AS SchemaName,
        ///	CASE 
        ///            WHEN OBJECTPROPERTY(fk.object_id,  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RetrieveTableRelationships {
            get {
                return ResourceManager.GetString("RetrieveTableRelationships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE {0}
        ///SELECT 
        ///sc.TABLE_CATALOG,
        ///sc.TABLE_SCHEMA,
        ///sc.TABLE_NAME, 
        ///sc.COLUMN_NAME, 
        ///sc.DATA_TYPE 
        ///FROM INFORMATION_SCHEMA.COLUMNS sc
        ///	INNER JOIN INFORMATION_SCHEMA.TABLES st ON sc.TABLE_NAME = st.TABLE_NAME
        ///WHERE st.TABLE_TYPE = &apos;BASE TABLE&apos;
        ///      AND sc.TABLE_NAME != &apos;sysdiagrams&apos;;.
        /// </summary>
        public static string SelectDatabaseTables {
            get {
                return ResourceManager.GetString("SelectDatabaseTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WHERE TABLE_CATALOG = &apos;{0}&apos;.
        /// </summary>
        public static string SelectDatabaseTablesWhere {
            get {
                return ResourceManager.GetString("SelectDatabaseTablesWhere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE {0}
        ///SELECT 
        ///s.name AS &apos;@Schema&apos;,
        ///t.name AS &apos;@Name&apos;,
        ///t.object_id AS &apos;@TableId&apos;,
        ///(
        ///SELECT DISTINCT
        ///	c.name AS &apos;@Name&apos;,
        ///    --c.column_id AS &apos;@ColumnId&apos;,
        ///    IIF(i.object_id IS NOT NULL,1,0) AS &apos;@IsPrimaryKey&apos;,
        ///    f.referenced_object_id AS &apos;@ForeignKey&apos;,
        ///	CASE 
        ///        WHEN isc.CHARACTER_MAXIMUM_LENGTH IS NULL THEN &apos; (&apos; + UPPER(SUBSTRING(isc.DATA_TYPE, 1, 1)) + LOWER(SUBSTRING(isc.DATA_TYPE, 2, LEN(isc.DATA_TYPE))) + &apos;)&apos;
        ///        ELSE &apos; (&apos; + UPPER(SUBSTRING(isc.DATA_TYPE, 1, 1)) + LOWER(SUBSTR [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SelectDependencyTableInfo {
            get {
                return ResourceManager.GetString("SelectDependencyTableInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use {0}
        ///Select
        ///S.[name] as &apos;Dependent_Tables&apos;
        ///From
        ///sys.objects S inner join sys.sysreferences R
        ///on S.object_id = R.rkeyid
        ///Where
        ///S.[type] = &apos;U&apos; AND
        ///R.fkeyid = OBJECT_ID(&apos;{1}&apos;).
        /// </summary>
        public static string SelectDependencyTableName {
            get {
                return ResourceManager.GetString("SelectDependencyTableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trust Server Certificate.
        /// </summary>
        public static string Trust_Server_Certificate {
            get {
                return ResourceManager.GetString("Trust_Server_Certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TrustServerCertificate.
        /// </summary>
        public static string TrustServerCertificate {
            get {
                return ResourceManager.GetString("TrustServerCertificate", resourceCulture);
            }
        }
    }
}
