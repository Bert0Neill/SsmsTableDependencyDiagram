<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="calculator16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453477379_Calculator.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="hammer16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453477392_hammer_screwdriver.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480678_files_folders_15" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480678_files-folders-15.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480682_Table_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480682_Table_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480689_table_tab_search" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480689_table_tab_search.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480695_table_add" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480695_table-add.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480700_table_edit" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480700_table-edit.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480710_table_sum" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480710_table_sum.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480734_table_accept" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480734_table-accept.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480774_040" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480774_040.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480786_041" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480786_041.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480802_database_add" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480802_database_add.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="_1453480812_database_save" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\1453480812_database_save.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="SQLDuplicateColumnData" xml:space="preserve">
    <value>WITH cte AS (SELECT {0},
row_number() OVER(PARTITION BY {0} ORDER BY {0}) AS [rank]
FROM {1})

/*Run SQL to find duplicates, when you are happy to remove the duplicates, 
uncomment the Delete statement and comment out the Select statement */

SELECT * FROM cte WHERE [rank] &gt; 1
--DELETE cte WHERE [rank] &gt; 1</value>
    <comment>Duplicate column data</comment>
  </data>
  <data name="SQLBackupInfo" xml:space="preserve">
    <value>/*display information regarding what databases are backup*/
SELECT db.NAME
	,CASE 
		WHEN MAX(b.backup_finish_date) IS NULL
			THEN 'No Backup'
		ELSE convert(VARCHAR(100), MAX(b.backup_finish_date))
		END AS [Last Backup Finish Date]
FROM sys.databases db
LEFT OUTER JOIN msdb.dbo.backupset b ON db.NAME = b.database_name
	AND b.type = 'D'
WHERE db.database_id NOT IN (2)
GROUP BY db.NAME
ORDER BY 2 DESC

/*display the backup device names*/
SELECT DISTINCT physical_device_name AS [Physical Device Name]
FROM msdb.dbo.backupmediafamily</value>
  </data>
  <data name="SQLKillTrans" xml:space="preserve">
    <value>SELECT  L.request_session_id AS SPID,
DB_NAME(L.resource_database_id) AS DatabaseName,
O.Name AS LockedObjectName,
P.object_id AS LockedObjectId,
L.resource_type AS LockedResource,
L.request_mode AS LockType,
ST.text AS SqlStatementText,
ES.login_name AS LoginName,
ES.host_name AS HostName,
TST.is_user_transaction as IsUserTransaction,
AT.name as TransactionName,
CN.auth_scheme as AuthenticationMethod
FROM     sys.dm_tran_locks L
JOIN sys.partitions P ON P.hobt_id = L.resource_associated_entity_id
JOIN sys.objects O ON O.object_id = P.object_id
JOIN sys.dm_exec_sessions ES ON ES.session_id = L.request_session_id
JOIN sys.dm_tran_session_transactions TST ON ES.session_id = TST.session_id
JOIN sys.dm_tran_active_transactions AT ON TST.transaction_id = AT.transaction_id
JOIN sys.dm_exec_connections CN ON CN.session_id = ES.session_id
CROSS APPLY sys.dm_exec_sql_text(CN.most_recent_sql_handle) AS ST
WHERE   resource_database_id = db_id()
ORDER BY L.request_session_id

-- use the 'SPID' listed to KILL the appropiate object
--KILL SPID</value>
  </data>
  <data name="SQLSerInfo" xml:space="preserve">
    <value>SELECT SERVERPROPERTY('MachineName') AS Host
	,SERVERPROPERTY('InstanceName') AS Instance
	,SERVERPROPERTY('Edition') AS Edition
	,/*shows 32 bit or 64 bit*/
	SERVERPROPERTY('ProductLevel') AS ProductLevel
	,/* RTM or SP1 etc*/
	CASE SERVERPROPERTY('IsClustered')
		WHEN 1
			THEN 'CLUSTERED'
		ELSE 'STANDALONE'
		END AS ServerType
	,@@VERSION AS VersionNumber</value>
  </data>
  <data name="ColumnRegEx" xml:space="preserve">
    <value>^Server\[[^\]]*\]/Database\[@Name='(?&lt;Database&gt;[^']*)'\]/Table\[@Name='(?&lt;Table&gt;[^']*)' and @Schema='(?&lt;Schema&gt;[^']*)'\]/Column\[@Name='(?&lt;Column&gt;[^']*)'\]$</value>
  </data>
  <data name="TableRegEx" xml:space="preserve">
    <value>^Server\[[^\]]*\]/Database\[[^\]]*\]/Table\[[^\]]*\]$</value>
  </data>
  <data name="SQLCount" xml:space="preserve">
    <value>SELECT COUNT(*) AS COUNT FROM [{0}].[{1}]</value>
  </data>
  <data name="SQLSelect" xml:space="preserve">
    <value>SELECT * FROM [{0}].[{1}]</value>
  </data>
</root>